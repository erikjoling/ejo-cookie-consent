{"version":3,"sources":["1-use-strict.js","cookie-consent.js"],"names":["ejoCookieConsent","priv","debugMode","ejoCookieConsentPlugin","consentDuration","cookieName","consentText","consentButtonText","root","document","querySelector","cookieConsentBlock","undefined","getCookie","name","nameEQ","ca","cookie","split","i","length","c","charAt","substring","indexOf","setCookie","dateToday","value","expiration","dd","Date","getDate","mm","getMonth","getFullYear","setTime","getTime","toUTCString","cookieConsentIsGiven","argument","displayCookieConsentBlock","createElement","classList","add","cookieConsentBlockInner","cookieConsentBlockText","innerHTML","cookieConsentBlockButton","appendChild","hideCookieConsentBlock","remove","height","offsetHeight","style","marginBottom","boxShadow","init","addEventListener"],"mappings":"AAAA,aCGA,IAAAA,iBAAA,WASA,IAAAC,EAAA,GAqIA,OAzHAA,EAAAC,WAAA,EACAD,EAAAC,UAAAC,uBAAAD,UAGAD,EAAAG,gBAAAD,uBAAAC,gBAGAH,EAAAI,WAAAF,uBAAAE,WACAJ,EAAAK,YAAAH,uBAAAG,YACAL,EAAAM,kBAAAJ,uBAAAI,kBACAN,EAAAO,KAAAC,SAAAC,cAAA,QACAT,EAAAU,wBAAAC,EAGAX,EAAAY,UAAA,SAAAC,GAGA,IAFA,IAAAC,EAAAD,EAAA,IACAE,EAAAP,SAAAQ,OAAAC,MAAA,KACAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,IAAA,CAEA,IADA,IAAAE,EAAAL,EAAAG,GACA,KAAAE,EAAAC,OAAA,IAAAD,EAAAA,EAAAE,UAAA,EAAAF,EAAAD,QACA,GAAA,GAAAC,EAAAG,QAAAT,GAAA,OAAAM,EAAAE,UAAAR,EAAAK,OAAAC,EAAAD,QAEA,OAAA,MAIAnB,EAAAwB,UAAA,WACA,IAAAC,EAAAC,EAAAC,EAMAC,GAHAH,EAAA,IAAAI,MAGAC,UACAC,EAAAN,EAAAO,WAAA,EAIAJ,EAAA,KAAAA,EAAA,IAAAA,GACAG,EAAA,KAAAA,EAAA,IAAAA,GAGAL,EAAAE,EAAA,IAAAG,EAAA,IAPAN,EAAAQ,cAUAR,EAAAS,QAAAT,EAAAU,UAAA,GAAAnC,EAAAG,gBAAA,GAAA,GAAA,KACAwB,EAAAF,EAAAW,cAGA5B,SAAAQ,OAAAhB,EAAAI,WAAA,IAAAsB,EAAA,aAAAC,EAAA,YAIA3B,EAAAqC,qBAAA,SAAAC,GAEA,OAAAtC,EAAAY,UAAAZ,EAAAI,aAIAJ,EAAAuC,0BAAA,WAEAvC,EAAAU,mBAAAF,SAAAgC,cAAA,OACAxC,EAAAU,mBAAA+B,UAAAC,IAAA,sBAEA,IAAAC,EAAAnC,SAAAgC,cAAA,OACAG,EAAAF,UAAAC,IAAA,6BAEA,IAAAE,EAAApC,SAAAgC,cAAA,OACAI,EAAAH,UAAAC,IAAA,4BACAE,EAAAC,UAAA7C,EAAAK,YAEA,IAAAyC,EAAAtC,SAAAgC,cAAA,UACAM,EAAAL,UAAAC,IAAA,8BACAI,EAAAD,UAAA7C,EAAAM,kBAGAqC,EAAAI,YAAAH,GACAD,EAAAI,YAAAD,GACA9C,EAAAU,mBAAAqC,YAAAJ,GACA3C,EAAAO,KAAAwC,YAAA/C,EAAAU,oBAGAV,EAAAO,KAAAkC,UAAAC,IAAA,sBAIA1C,EAAAgD,uBAAA,WAGAhD,EAAAO,KAAAkC,UAAAQ,OAAA,qBAMA,IAAAC,EAAAlD,EAAAU,mBAAAyC,aAAA,KACAnD,EAAAU,mBAAA0C,MAAAC,aAAA,IAAAH,EAGAlD,EAAAU,mBAAA0C,MAAAE,UAAA,OAGAtD,EAAAwB,aAGAxB,EAAAuD,KAAA,WAGAvD,EAAAqC,yBAAArC,EAAAC,YAGAD,EAAAuC,4BAGAvC,EAAAU,mBAAAD,cAAA,+BAAA+C,iBAAA,QAAAxD,EAAAgD,0BAOA,CACAO,KAAAvD,EAAAuD,MA/IA,GAoJA/C,SAAAgD,iBAAA,mBAAA,WACAzD,iBAAAwD","file":"plugin.min.js","sourcesContent":["\"use strict\";\n","// EJO Cookie Consent\n// Inspired by the Ilmenite Cookie Banner of Bernskiold Media\n\nvar ejoCookieConsent = (function () {\n\n    /**\n     * Module pattern\n     *\n     * Keep stuff out of the global namespace\n     * By using private and public object there is no need to \n     * map properties and methods. \n     */\n    var priv = {}; // Store private properties and methods\n    var publ = {}; // Store public properties and methods\n\n    /**\n     * Note: erasing cookie with javascript has no use because this script is not\n     *       added to the site when the cookie is present. \n     *       Remark: script is added when SCRIPT_DEBUG is set in wp-config.\n     */\n\n    // Variables\n    \n    // Debug. It does set the cookie, but the banner is always visible\n    priv.debugMode            = false; \n    priv.debugMode            = ejoCookieConsentPlugin.debugMode;\n\n    // Duration in Days: The number of days before the cookie should expire.\n    priv.consentDuration      = ejoCookieConsentPlugin.consentDuration; \n\n    // Self-explanatory\n    priv.cookieName           = ejoCookieConsentPlugin.cookieName; \n    priv.consentText          = ejoCookieConsentPlugin.consentText;\n    priv.consentButtonText    = ejoCookieConsentPlugin.consentButtonText;\n    priv.root                 = document.querySelector('body');\n    priv.cookieConsentBlock   = undefined;\n\n    // Get Cookie helper\n    priv.getCookie = function(name) {\n        var nameEQ = name + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i=0;i < ca.length;i++) {\n            var c = ca[i];\n            while (c.charAt(0)==' ') c = c.substring(1,c.length);\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n        }\n        return null;\n    };\n\n    // Set the cookie\n    priv.setCookie = function() {\n        var dateToday, value, expiration;        \n\n        // Set the consent duration into a cookie date string\n        dateToday = new Date();\n        \n        // Create date \"dd-mm-yyyy\"\n        var dd = dateToday.getDate();\n        var mm = dateToday.getMonth()+1; //January is 0!\n        var yyyy = dateToday.getFullYear();\n\n        // Leading zeroes\n        if(dd<10) { dd = '0'+dd } \n        if(mm<10) { mm = '0'+mm }\n\n        // Set curent date as value\n        value = dd + \"-\" + mm + \"-\" + yyyy;\n\n        // Set expiration\n        dateToday.setTime(dateToday.getTime()+(priv.consentDuration*24*60*60*1000));\n        expiration = dateToday.toUTCString();\n\n        // Set the actual cookie\n        document.cookie = priv.cookieName + '=' + value + '; expires=' + expiration + '; path=/';\n    };\n\n    // Check if cookie consent\n    priv.cookieConsentIsGiven = function(argument) {\n\n        return ( priv.getCookie(priv.cookieName) );\n    };\n\n    // Show \n    priv.displayCookieConsentBlock = function() {\n        \n        priv.cookieConsentBlock = document.createElement( 'div' );\n        priv.cookieConsentBlock.classList.add('ejo-cookie-consent');\n\n        var cookieConsentBlockInner = document.createElement( 'div' );\n        cookieConsentBlockInner.classList.add('ejo-cookie-consent__inner');\n\n        var cookieConsentBlockText = document.createElement( 'div' );\n        cookieConsentBlockText.classList.add('ejo-cookie-consent__text');\n        cookieConsentBlockText.innerHTML = priv.consentText;\n\n        var cookieConsentBlockButton = document.createElement( 'button' );\n        cookieConsentBlockButton.classList.add('ejo-cookie-consent__button');\n        cookieConsentBlockButton.innerHTML = priv.consentButtonText;\n\n        // Add to DOM\n        cookieConsentBlockInner.appendChild(cookieConsentBlockText);\n        cookieConsentBlockInner.appendChild(cookieConsentBlockButton);\n        priv.cookieConsentBlock.appendChild(cookieConsentBlockInner);\n        priv.root.appendChild(priv.cookieConsentBlock);\n\n        // Let body know it has a cookie banner\n        priv.root.classList.add('has-cookie-banner');\n        \n    };\n\n    priv.hideCookieConsentBlock = function(){\n\n        // Let body know it doens't have a cookie banner anymore\n        priv.root.classList.remove('has-cookie-banner');\n\n        // Remove\n        // priv.root.removeChild( priv.root.querySelector( '.ejo-cookie-consent' ) );\n\n        // Move the block out of sight\n        var height = priv.cookieConsentBlock.offsetHeight + 'px';\n        priv.cookieConsentBlock.style.marginBottom = '-' + height;\n\n        // Prevent shadow from being shown\n        priv.cookieConsentBlock.style.boxShadow = 'none';\n\n        // Set the cookie\n        priv.setCookie();\n    };\n\n    priv.init = function() {\n\n        // Do stuff if no consent for cookie yet\n        if ( ! priv.cookieConsentIsGiven() || priv.debugMode ) {\n            \n            // Show consent block\n            priv.displayCookieConsentBlock();\n\n            // Listen to button\n            priv.cookieConsentBlock.querySelector( '.ejo-cookie-consent__button' ).addEventListener( 'click', priv.hideCookieConsentBlock );\n        }\n    };\n\n    /**\n     * Share public properties and methods with the global namespace\n     */\n    return {\n        'init': priv.init\n    };\n\n})();\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    ejoCookieConsent.init();\n});"]}