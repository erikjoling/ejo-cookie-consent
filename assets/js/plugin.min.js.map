{"version":3,"sources":["1-use-strict.js","cookie-consent.js"],"names":["ejoCookieConsent","$","priv","publ","noCookieMode","consentDuration","containerID","containerButtonClass","cookieName","cookieActiveValue","setComplianceCookie","date","Date","setTime","getTime","document","cookie","toGMTString","createConsentDiv","consentBlockHeight","innerHeight","addClass","css","checkCookie","name","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","removeMe","slideToggle","removeClass","init","click","jQuery","ready"],"mappings":"AAAA,aCGA,IAAAA,iBAAA,SAAAC,GASA,IAAAC,KACAC,KAsEA,OAnEAD,EAAAE,cAAA,EACAF,EAAAG,gBAAA,GACAH,EAAAI,YAAA,uBACAJ,EAAAK,qBAAA,6BACAL,EAAAM,WAAA,kBACAN,EAAAO,kBAAA,IAEAP,EAAAQ,oBAAA,WAGA,IAAAR,EAAAE,aAAA,CAGA,IAAAO,EAAA,IAAAC,KACAD,EAAAE,QAAAF,EAAAG,UAAA,GAAAZ,EAAAG,gBAAA,GAAA,GAAA,KAGAU,SAAAC,OAAAd,EAAAM,WAAA,IAAAN,EAAAO,kBAAA,aAAAE,EAAAM,cAAA,aAIAf,EAAAgB,iBAAA,WAEA,IAAAC,EAAAlB,EAAA,IAAAC,EAAAI,aAAAc,cAGAnB,EAAA,QAAAoB,SAAA,qBACApB,EAAA,QAAAqB,IAAA,cAAAH,EAAA,OAGAjB,EAAAqB,YAAA,SAAAC,GAGA,IAFA,IAAAC,EAAAD,EAAA,IACAE,EAAAX,SAAAC,OAAAW,MAAA,KACAC,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAAA,CAEA,IADA,IAAAE,EAAAJ,EAAAE,GACA,KAAAE,EAAAC,OAAA,IAAAD,EAAAA,EAAAE,UAAA,EAAAF,EAAAD,QACA,GAAA,GAAAC,EAAAG,QAAAR,GAAA,OAAAK,EAAAE,UAAAP,EAAAI,OAAAC,EAAAD,QAEA,OAAA,MAGA3B,EAAAgC,SAAA,WAGAjC,EAAA,IAAAC,EAAAI,aAAA6B,YAAA,WAEAlC,EAAA,QAAAmC,YAAA,qBACAnC,EAAA,QAAAqB,IAAA,cAAA,SAKApB,EAAAQ,uBAGAP,EAAAkC,KAAA,YAEAnC,EAAAqB,YAAArB,EAAAM,aAAAN,EAAAO,mBAAAP,EAAAE,eACAF,EAAAgB,mBAGAjB,EAAA,IAAAC,EAAAK,sBAAA+B,MAAApC,EAAAgC,WAMA/B,EAhFA,CAkFAoC,QAGAA,OAAAxB,UAAAyB,MAAA,SAAAvC,GACAD,iBAAAqC","file":"plugin.min.js","sourcesContent":["\"use strict\";\r\n","// EJO Cookie Consent\r\n// Inspired by the Ilmenite Cookie Banner of Bernskiold Media\r\n\r\nvar ejoCookieConsent = (function ($) {\r\n\r\n    /**\r\n     * Module pattern\r\n     *\r\n     * Keep stuff out of the global namespace\r\n     * By using private and public object there is no need to \r\n     * map properties and methods. \r\n     */\r\n    var priv = {}; // Store private properties and methods\r\n    var publ = {}; // Store public properties and methods\r\n\r\n    // Variables\r\n    priv.noCookieMode      = true;                    // Debug Mode: true will disable the cookie, allowing you to debug the banner.\r\n    priv.consentDuration   = 30;                       // Duration in Days: The number of days before the cookie should expire.\r\n    priv.containerID       = 'cookie-consent-block';   // The ID of the notice container div\r\n    priv.containerButtonClass = 'close-cookie-consent-block';\r\n    priv.cookieName        = 'EUCookieConsent';        // The name of the cookie\r\n    priv.cookieActiveValue = '1';                      // The active value of the cookie.\r\n\r\n    priv.setComplianceCookie = function() {\r\n\r\n        // If no debug mode, set the cookie\r\n        if ( ! priv.noCookieMode ) {\r\n\r\n            // Set the consent duration into a cookie date string\r\n            var date = new Date();\r\n            date.setTime(date.getTime()+(priv.consentDuration*24*60*60*1000));\r\n\r\n            // Set the actual cookie\r\n            document.cookie = priv.cookieName + '=' + priv.cookieActiveValue + '; expires=' + date.toGMTString() + '; path=/';\r\n        }\r\n    }\r\n\r\n    priv.createConsentDiv = function() {\r\n        // Get the height of the consent block\r\n        var consentBlockHeight = $('#' + priv.containerID).innerHeight();\r\n\r\n        // Add class to body\r\n        $('body').addClass('has-cookie-banner');\r\n        $('body').css('padding-top', consentBlockHeight + 'px');\r\n    }\r\n\r\n    priv.checkCookie = function(name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for(var i=0;i < ca.length;i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    priv.removeMe = function(){\r\n\r\n        // Hide the cookie banner\r\n        $( '#' + priv.containerID).slideToggle(function() {\r\n            // Remove cookie banner class\r\n            $('body').removeClass('has-cookie-banner');\r\n            $('body').css('padding-top', '0px');\r\n\r\n        });\r\n\r\n        // Set the cookie\r\n        priv.setComplianceCookie();\r\n    }\r\n\r\n    publ.init = function() {\r\n\r\n        if(priv.checkCookie(priv.cookieName) != priv.cookieActiveValue || priv.noCookieMode ){\r\n            priv.createConsentDiv();\r\n        }\r\n\r\n        $( '.' + priv.containerButtonClass).click(priv.removeMe);\r\n    }\r\n\r\n    /**\r\n     * Share public properties and methods with the global namespace\r\n     */\r\n    return publ;\r\n\r\n})(jQuery);\r\n\r\n\r\njQuery(document).ready(function($) {\r\n    ejoCookieConsent.init();\r\n});"]}